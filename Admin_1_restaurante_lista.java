/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.Constantes;
import controller.FileUtils;
import model.Restaurante;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.Serial;
import java.util.ArrayList;

/**
 *
 * @author Carlos Campos
 */
public class Admin_1_restaurante_lista extends javax.swing.JFrame {

    @Serial
    private static final long serialVersionUID = 7078829280991780052L;

    /**
     * Creates new form Admin_1_restaurante_DarBaja
     */
    public Admin_1_restaurante_lista() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonBack = new javax.swing.JButton();
        jButtonAltaBaja = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRestaurantes = new javax.swing.JTable();
        jButtonModificacion = new javax.swing.JButton();
        jButtonAlta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonBack.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonBack.setText("Atrás");
        jButtonBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonAltaBaja.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButtonAltaBaja.setText("Alta/Baja");
        jButtonAltaBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAltaBajaActionPerformed(evt);
            }
        });

        jTableRestaurantes.setAutoCreateRowSorter(true);
        jTableRestaurantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRestaurantes.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTableRestaurantesCargarDatosTabla(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTableRestaurantes);

        jButtonModificacion.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButtonModificacion.setText("Modificación");
        jButtonModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificacionActionPerformed(evt);
            }
        });

        jButtonAlta.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButtonAlta.setText("Nuevo");
        jButtonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAltaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAlta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAltaBaja)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModificacion)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAltaBaja)
                    .addComponent(jButtonModificacion)
                    .addComponent(jButtonAlta)
                    .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        Admin_1 admin_1 = new Admin_1();
        admin_1.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAltaActionPerformed
        Admin_1_restaurante_alta admin_1_restaurante_alta = new Admin_1_restaurante_alta();
        admin_1_restaurante_alta.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAltaActionPerformed

    private void jTableRestaurantesCargarDatosTabla(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTableRestaurantesCargarDatosTabla
        // tabla no editable
        DefaultTableModel modelo = new DefaultTableModel() {
            @Serial
            private static final long serialVersionUID = -5182616469083821779L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelo.addColumn("CIF");
        modelo.addColumn("Nombre");
        modelo.addColumn("Especialidad");
        modelo.addColumn("Calificación");
        modelo.addColumn("Estado");
        // cargar datos
        ArrayList<Restaurante> restaurantes = (ArrayList<Restaurante>) FileUtils.readFromFile(Constantes.PATH_RESTAURANTS);
        // añadimos todos los restaurantes a la tabla
        for (Restaurante restaurante : restaurantes) {
            // Añadir estrellas
            String estrellas = restaurante.getCalificacionMediaEstrellas();

            // Añadir estado
            String estado = "";
            if (restaurante.estaDeBaja()) estado = "Inactivo";
            else estado = "Activo";

            modelo.addRow(new Object[]{restaurante.getCif(), restaurante.getNombre(), restaurante.getEspecialidad(), estrellas, estado});
        }
        jTableRestaurantes.setModel(modelo);
    }//GEN-LAST:event_jTableRestaurantesCargarDatosTabla

    private void jButtonAltaBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAltaBajaActionPerformed
        // cargar datos
        ArrayList<Restaurante> restaurantes = (ArrayList<Restaurante>) FileUtils.readFromFile(Constantes.PATH_RESTAURANTS);

        // obtener fila seleccionada
        int row = jTableRestaurantes.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un restaurante", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        // obtener cif del restaurante seleccionado
        String cif = jTableRestaurantes.getModel().getValueAt(row, 0).toString();
        // buscar restaurante por cif
        Restaurante restaurante = null;
        for (Restaurante r : restaurantes) {
            if (r.getCif().equals(cif)) {
                restaurante = r;
                break;
            }
        }
        // cambia el estado al estado contrario
        if (restaurante != null)
            restaurante.setEstaDeBaja(!restaurante.estaDeBaja());
        // guardar cambios
        FileUtils.writeToFile(Constantes.PATH_RESTAURANTS, restaurantes);
        // actualizar tabla
        jTableRestaurantesCargarDatosTabla(null);
    }//GEN-LAST:event_jButtonAltaBajaActionPerformed

    private void jButtonModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificacionActionPerformed
        Admin_1_restaurante_modificaciones admin_1_restaurante_modificaciones = new Admin_1_restaurante_modificaciones();
        // obtener fila seleccionada
        int row = jTableRestaurantes.getSelectedRow();
        // obtener cif del restaurante seleccionado
        String cif = jTableRestaurantes.getModel().getValueAt(row, 0).toString();
        admin_1_restaurante_modificaciones.rellenarDatos(cif);
        admin_1_restaurante_modificaciones.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonModificacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_1_restaurante_lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_1_restaurante_lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_1_restaurante_lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_1_restaurante_lista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_1_restaurante_lista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlta;
    private javax.swing.JButton jButtonAltaBaja;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonModificacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRestaurantes;
    // End of variables declaration//GEN-END:variables
}
