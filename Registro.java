package view;

import controller.Constantes;
import controller.FileUtils;
import model.*;

import javax.swing.*;
import java.io.File;
import java.io.Serial;
import java.util.ArrayList;
import java.util.Date;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * @author hol
 */
public class Registro extends javax.swing.JFrame {

    @Serial
    private static final long serialVersionUID = -357447078064174583L;

    /**
     * Creates new form Elección_de_cliente
     */
    public Registro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jToggleButton1 = new javax.swing.JToggleButton();
        Registro = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        Telefono = new javax.swing.JLabel();
        Correo = new javax.swing.JLabel();
        Clave = new javax.swing.JLabel();
        Repita_la_clave = new javax.swing.JLabel();
        Contrasena = new javax.swing.JPasswordField();
        Repita_Contrasena = new javax.swing.JPasswordField();
        Rellenar_Correo = new javax.swing.JTextField();
        Rellenar_Telefono = new javax.swing.JTextField();
        Rellenar_Nombre = new javax.swing.JTextField();
        jButtonRegister = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jLabelDniCif = new javax.swing.JLabel();
        Rellenar_DniCif = new javax.swing.JTextField();
        jLabelWeb = new javax.swing.JLabel();
        Rellenar_Web = new javax.swing.JTextField();
        jRadioButtonParticular = new javax.swing.JRadioButton();
        jRadioButtonEmpresa = new javax.swing.JRadioButton();
        Calle = new javax.swing.JLabel();
        Numero = new javax.swing.JLabel();
        CP = new javax.swing.JLabel();
        Ciudad = new javax.swing.JLabel();
        Tarjeta = new javax.swing.JLabel();
        Rellenar_CP = new javax.swing.JTextField();
        Rellenar_Numero = new javax.swing.JTextField();
        Rellenar_Calle = new javax.swing.JTextField();
        Caducidad = new javax.swing.JLabel();
        Rellenar_Ciudad = new javax.swing.JTextField();
        Rellenar_Tarjeta = new javax.swing.JTextField();
        jDateChooser_Caducidad = new com.toedter.calendar.JDateChooser();
        jLabelLogo = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Registro.setBackground(new java.awt.Color(255, 255, 255));
        Registro.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Registro.setText("                        REGISTRO");
        Registro.setToolTipText("");
        Registro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Nombre.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Nombre.setText("Nombre: ");

        Telefono.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Telefono.setText("Telefono:");

        Correo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Correo.setText("Correo:");

        Clave.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Clave.setText("Clave:");

        Repita_la_clave.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Repita_la_clave.setText("Repita la Clave:");

        Contrasena.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Repita_Contrasena.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Rellenar_Correo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Rellenar_Telefono.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Rellenar_Nombre.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Rellenar_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rellenar_NombreActionPerformed(evt);
            }
        });

        jButtonRegister.setBackground(new java.awt.Color(196, 238, 179));
        jButtonRegister.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jButtonRegister.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRegister.setText("Registrar");
        jButtonRegister.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));
        jButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegisterActionPerformed(evt);
            }
        });

        jButtonBack.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonBack.setText("Atrás");
        jButtonBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jLabelDniCif.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelDniCif.setText("DNI:");

        Rellenar_DniCif.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabelWeb.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelWeb.setText("Web:");

        Rellenar_Web.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Rellenar_Web.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rellenar_WebActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonParticular);
        jRadioButtonParticular.setSelected(true);
        jRadioButtonParticular.setText("Particular");
        jRadioButtonParticular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonParticularActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonEmpresa);
        jRadioButtonEmpresa.setText("Empresa");
        jRadioButtonEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEmpresaActionPerformed(evt);
            }
        });

        Calle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Calle.setText("Calle:");

        Numero.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Numero.setText("Número:");

        CP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        CP.setText("CP:");

        Ciudad.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Ciudad.setText("Ciudad:");

        Tarjeta.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Tarjeta.setText("Tarjeta");

        Rellenar_CP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Rellenar_Numero.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Rellenar_Calle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Caducidad.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Caducidad.setText("Caducidad:");

        Rellenar_Ciudad.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        Rellenar_Tarjeta.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jDateChooser_Caducidad.setPreferredSize(new java.awt.Dimension(89, 27));

        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logominiEAT.png"))); // NOI18N
        jLabelLogo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Calle, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CP, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Numero, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Caducidad, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Rellenar_Numero)
                                    .addComponent(Rellenar_Calle)
                                    .addComponent(Rellenar_CP)
                                    .addComponent(jDateChooser_Caducidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Rellenar_Tarjeta)
                                    .addComponent(Rellenar_Ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Clave, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Repita_la_clave, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Correo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRadioButtonParticular)
                                    .addComponent(jLabelWeb)
                                    .addComponent(jLabelDniCif))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Repita_Contrasena)
                                    .addComponent(Contrasena)
                                    .addComponent(Rellenar_Correo)
                                    .addComponent(Rellenar_Telefono)
                                    .addComponent(Rellenar_Nombre)
                                    .addComponent(Rellenar_DniCif)
                                    .addComponent(jRadioButtonEmpresa)
                                    .addComponent(Rellenar_Web, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(147, 147, 147))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Registro, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jLabelLogo)
                        .addGap(21, 21, 21))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonBack)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelLogo)
                                .addGap(20, 20, 20))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(Registro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Telefono))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_Correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Correo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Clave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Repita_Contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Repita_la_clave))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_Calle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Calle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_Numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Numero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_CP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Ciudad)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tarjeta)
                            .addComponent(Rellenar_Tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Rellenar_Ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Caducidad)
                    .addComponent(jDateChooser_Caducidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonParticular)
                    .addComponent(jRadioButtonEmpresa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rellenar_DniCif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDniCif))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelWeb, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Rellenar_Web, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRegister)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Rellenar_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rellenar_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rellenar_NombreActionPerformed

    private void jButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegisterActionPerformed
        if (!isValidForm()) return;
        // Comprobamos si las contraseñas coinciden con getPassword()
        if (String.valueOf(Contrasena.getPassword()).equals(String.valueOf(Repita_Contrasena.getPassword()))) {
            // Creamos un objeto de tipo Direccion y TarjetaCredito con los datos introducidos en el formulario
            Direccion direccion = new Direccion(Rellenar_Calle.getText(), Integer.parseInt(Rellenar_Numero.getText()), Rellenar_CP.getText(), Rellenar_Ciudad.getText());
            TarjetaCredito tarjeta = new TarjetaCredito(Rellenar_Nombre.getText(), Rellenar_Tarjeta.getText(), jDateChooser_Caducidad.getDate());

            // Inicializamos el cliente, ya sea particular o empresa
            ClienteBase cliente;

            // Si se seleccionó ClienteParticular, creamos una instancia de esa clase y configuramos los campos específicos de esa clase
            if (jRadioButtonParticular.isSelected()) {
                cliente = new ClienteParticular();
                ((ClienteParticular) cliente).setDni(Rellenar_DniCif.getText());
            } else {
                // Si no se seleccionó ClienteParticular, asumimos que es ClienteEmpresa. Creamos una instancia de esa clase y configuramos los campos específicos de esa clase
                cliente = new ClienteEmpresa();
                ((ClienteEmpresa) cliente).setCIF(Rellenar_DniCif.getText());
                ((ClienteEmpresa) cliente).setWeb(Rellenar_Web.getText());
            }

            // Configuramos los campos comunes entre ClienteParticular y ClienteEmpresa
            cliente.setNombre(Rellenar_Nombre.getText());
            cliente.setTelefono(Integer.parseInt(Rellenar_Telefono.getText()));
            cliente.setCorreo(Rellenar_Correo.getText());
            cliente.setContrasena(String.valueOf(Contrasena.getPassword()));
            cliente.setDireccion(direccion);
            cliente.setTarjeta(tarjeta);

            // Intentamos leer la lista de usuarios del fichero. Si el fichero no existe o no se puede convertir a ArrayList, creamos una nueva lista
            ArrayList<UsuarioBase> usuarios = null;
            File file = new File(Constantes.PATH_USERS);
            if (file.exists()) {
                usuarios = (ArrayList<UsuarioBase>) FileUtils.readFromFile(Constantes.PATH_USERS);
                if (usuarios == null) {
                    usuarios = new ArrayList<>();
                }
            } else {
                // Si el fichero no existe, creamos una nueva lista
                usuarios = new ArrayList<>();
            }

            // Si existe ya uno con ese correo no lo registramos
            for (UsuarioBase usuario : usuarios) {
                if (usuario.getCorreo().equals(cliente.getCorreo())) {
                    JOptionPane.showMessageDialog(null, "Ya existe un usuario con ese correo");
                    return;
                }
            }

            usuarios.add(cliente);

            // Escribimos la lista de usuarios actualizada al fichero
            FileUtils.writeToFile(Constantes.PATH_USERS, usuarios);

            // Volvemos a la pantalla de login
            Login login = new Login();
            login.setVisible(true);
            this.setVisible(false);

            // Mostramos un mensaje de éxito
            JOptionPane.showMessageDialog(null, "Usuario registrado correctamente");
        } else {
            // Si las contraseñas no coinciden, mostramos un mensaje de error
            JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
        }
    }//GEN-LAST:event_jButtonRegisterActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        Login login = new Login();
        login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jRadioButtonParticularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonParticularActionPerformed
        jLabelDniCif.setText("DNI:");
        jLabelWeb.setText(" ");
        Rellenar_Web.setVisible(false);
    }//GEN-LAST:event_jRadioButtonParticularActionPerformed

    private void jRadioButtonEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEmpresaActionPerformed
        jLabelDniCif.setText("CIF:");
        jLabelWeb.setText("Web:");
        Rellenar_Web.setVisible(true);
    }//GEN-LAST:event_jRadioButtonEmpresaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jLabelWeb.setText(" ");
        Rellenar_Web.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void Rellenar_WebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rellenar_WebActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rellenar_WebActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CP;
    private javax.swing.JLabel Caducidad;
    private javax.swing.JLabel Calle;
    private javax.swing.JLabel Ciudad;
    private javax.swing.JLabel Clave;
    private javax.swing.JPasswordField Contrasena;
    private javax.swing.JLabel Correo;
    private javax.swing.JLabel Nombre;
    private javax.swing.JLabel Numero;
    private javax.swing.JLabel Registro;
    private javax.swing.JTextField Rellenar_CP;
    private javax.swing.JTextField Rellenar_Calle;
    private javax.swing.JTextField Rellenar_Ciudad;
    private javax.swing.JTextField Rellenar_Correo;
    private javax.swing.JTextField Rellenar_DniCif;
    private javax.swing.JTextField Rellenar_Nombre;
    private javax.swing.JTextField Rellenar_Numero;
    private javax.swing.JTextField Rellenar_Tarjeta;
    private javax.swing.JTextField Rellenar_Telefono;
    private javax.swing.JTextField Rellenar_Web;
    private javax.swing.JPasswordField Repita_Contrasena;
    private javax.swing.JLabel Repita_la_clave;
    private javax.swing.JLabel Tarjeta;
    private javax.swing.JLabel Telefono;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonRegister;
    private com.toedter.calendar.JDateChooser jDateChooser_Caducidad;
    private javax.swing.JLabel jLabelDniCif;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelWeb;
    private javax.swing.JRadioButton jRadioButtonEmpresa;
    private javax.swing.JRadioButton jRadioButtonParticular;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    private boolean isValidForm() {
        // Comprobación de validez del formulario
        if (Rellenar_Nombre.getText().isEmpty() ||
                Rellenar_Telefono.getText().isEmpty() ||
                Rellenar_Correo.getText().isEmpty() ||
                String.valueOf(Contrasena.getPassword()).isEmpty() ||
                Rellenar_Calle.getText().isEmpty() ||
                Rellenar_Numero.getText().isEmpty() ||
                Rellenar_CP.getText().isEmpty() ||
                Rellenar_Ciudad.getText().isEmpty() ||
                Rellenar_Tarjeta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos");
            return false;
        }

        try {
            Integer.parseInt(Rellenar_Telefono.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Número de teléfono no válido");
            return false;
        }

        if (!Rellenar_Correo.getText().contains("@")) {
            JOptionPane.showMessageDialog(null, "Correo electrónico no válido");
            return false;
        }

        try {
            Integer.parseInt(Rellenar_Numero.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Número de calle no válido");
            return false;
        }

        try {
            Integer.parseInt(Rellenar_CP.getText());
            if (Rellenar_CP.getText().length() != 5) {
                JOptionPane.showMessageDialog(null, "La longitud del código postal debe ser 5");
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Código postal no válido");
            return false;
        }

        // comprobar que la tarjeta de credito tiene solo numeros
        try {
            Long.parseLong(Rellenar_Tarjeta.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El número de tarjeta debe contener solo números");
            return false;
        }

        // comprobar que longitud de la tarjeta de crédito es 16
        if (Rellenar_Tarjeta.getText().length() != 16) {
            JOptionPane.showMessageDialog(null, "El número de tarjeta debe tener 16 dígitos");
            return false;
        }


        // validar fecha de caducidad
        if (jDateChooser_Caducidad.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Fecha de caducidad no válida");
            return false;
        }

        // comprobar que la fecha de caducidad no es anterior a la fecha actual
        if (jDateChooser_Caducidad.getDate().before(new Date())) {
            JOptionPane.showMessageDialog(null, "Fecha de caducidad no válida");
            return false;
        }

        // si es particular validar dni y si es empresa validar cif
        if (jRadioButtonParticular.isSelected()) {
            if (!validarDni(Rellenar_DniCif.getText())) {
                JOptionPane.showMessageDialog(null, "DNI no válido");
                return false;
            }
        } else {
            if (!validarCif(Rellenar_DniCif.getText())) {
                JOptionPane.showMessageDialog(null, "CIF no válido");
                return false;
            }
        }

        return true;
    }

    private boolean validarDni(String dni) {
        // validar dni bien formado y letra sea valida
        String letras = "TRWAGMYFPDXBNJZSQVHLCKE";
        // comprobar longitud y que el ultimo caracter sea una letra
        if (dni.length() != 9 || !Character.isLetter(dni.charAt(8))) {
            return false;
        }
        // convertir a mayuscula
        dni = dni.toUpperCase();
        // calcular la letra a partir del numero del dni y comprobar que coincide con la letra
        return letras.charAt(Integer.parseInt(dni.substring(0, 8)) % 23) == dni.charAt(8);
    }

    private boolean validarCif(String cif) {
        // El CIF debe tener 9 caracteres (una letra, 7 dígitos y un dígito de control)
        if (cif.length() != 9)
            return false;

        // La primera letra debe estar dentro del rango permitido
        String firstLetter = cif.substring(0, 1).toUpperCase();
        return "ABCDEFGHJKLMNPQRSUVW".contains(firstLetter);
    }
}
